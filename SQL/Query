CREATE TABLE counselors (
    counselorId INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    name VARCHAR(100) NOT NULL,
    photo VARCHAR(255),
    current_profession VARCHAR(100),
    company VARCHAR(100),
    specialization VARCHAR(255),
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE victims (
    userId INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    age INT,
    occupation VARCHAR(100)
);

CREATE TABLE posts (
    postId INT AUTO_INCREMENT PRIMARY KEY,
    userId INT ,
    counselorId INT,
    is_anonymous BOOLEAN DEFAULT FALSE,
    image VARCHAR(255),
    title VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (userId) REFERENCES victims(userId),
    FOREIGN KEY (counselorId) REFERENCES counselors(counselorId)
);

CREATE TABLE appointments (
    appointmentId INT AUTO_INCREMENT PRIMARY KEY,
    date DATE NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    counselorId INT NOT NULL,
    userId INT NOT NULL,
    status ENUM('pending', 'confirmed', 'cancelled', 'completed') DEFAULT 'pending',
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (counselorId) REFERENCES counselors(counselorId),
    FOREIGN KEY (userId) REFERENCES victims(userId),
    CONSTRAINT chk_time CHECK (end_time > start_time),
    CONSTRAINT unique_appointment UNIQUE (counselorId, date, start_time)
);